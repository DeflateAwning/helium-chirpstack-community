# MQTT
mqtt.server=
mqtt.login=
mqtt.password=
mqtt.id=

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/chirpstack
spring.datasource.username=chirpstack
spring.datasource.password=xxxx

## Redis
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.username=
spring.redis.password=
spring.redis.timeout=60000
spring.redis.consumerGroup=cgroup_10
spring.redis.consumer=consumer_0

# Billing rules
#  authorized minimum DC balance value before stopping communications
helium.billing.dcBalanceStop=0
#  free initial DCs for new tenant
helium.billing.freeTenantDc=100
#  cost to receive an uplink message per 24 byte payload data
helium.billing.dcPer24BytesMessage=1
#  cost to receive each uplink duplicate (multi-buy)
helium.billing.dcPer24BDuplicate=1
#  cost to send a downlink per 24 byte data
helium.billing.dcPer24BDownlink=0
#  device insertion cost in DCs
helium.billing.dcPerDeviceInserted=0
#  device cost for inactivity per period (here 10 days), the calculation will not be under two days
helium.billing.inactivityBillingPeriodMs=0
helium.billing.dcPerInactivityPeriod=0
#  device cost for activity per period (here 1 day)
helium.billing.activityBillingPeriod=0
helium.billing.dcPerActivityPeriod=0
#  limit devices to a maximum of DCs for each, after device becomes deactivated
helium.billing.maxDcPerDevice=0
#  limit the rate consumption for a device on a given period, device auto-disable after, period in Ms
#    The minimum period is about current day + 1 day 
helium.billing.limitDcRatePerDevice=0
helium.billing.limitDcRatePeriod=0
